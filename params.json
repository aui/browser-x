{
  "name": "BrowserX",
  "tagline": "一个基于 NodeJS 实现的轻量级“浏览器”",
  "body": "# BrowserX\r\n\r\n[![NPM Version][npm-image]][npm-url]\r\n[![NPM Downloads][downloads-image]][downloads-url]\r\n[![Node.js Version][node-version-image]][node-version-url]\r\n[![Build Status][travis-ci-image]][travis-ci-url]\r\n\r\n[npm-image]: https://img.shields.io/npm/v/browser-x.svg\r\n[npm-url]: https://npmjs.org/package/browser-x\r\n[node-version-image]: https://img.shields.io/node/v/browser-x.svg\r\n[node-version-url]: http://nodejs.org/download/\r\n[downloads-image]: https://img.shields.io/npm/dm/browser-x.svg\r\n[downloads-url]: https://npmjs.org/package/browser-x\r\n[travis-ci-image]: https://travis-ci.org/aui/browser-x.svg?branch=master\r\n[travis-ci-url]: https://travis-ci.org/aui/browser-x\r\n\r\nbrowser-x 是一个基于 NodeJS 实现的轻量级“浏览器”，它的目标是高效的实现 DOM 中最核心的特性，以便开发者能够在 NodeJS 中使用 W3C 标准方法来操作文档与样式。\r\n\r\n## 安装\r\n\r\n``` shell\r\nnpm install browser-x\r\n```\r\n\r\n## 接口\r\n\r\n### browser(options, callback)\r\n\r\n返回：`Promise`\r\n\r\n``` javascript\r\nvar browser = require('browser-x');\r\n\r\nvar url = __dirname + '/debug.html';\r\nbrowser({\r\n    url: url,\r\n    loadCssFile: true,\r\n    silent: false\r\n}, function (errors, window) {\r\n    if (errors) {\r\n        throw errors;\r\n    }\r\n    var document = window.document;\r\n    var element = document.querySelector('#banner h2');\r\n    var fontFamily = window.getComputedStyle(element, '::after').fontFamily;\r\n    console.log(fontFamily);\r\n});\r\n```\r\n\r\n## options\r\n\r\n``` javascript\r\n{\r\n    /**\r\n     * 文件基础路径\r\n     */\r\n    url: 'about:blank',\r\n\r\n    /*\r\n     * HTML 文本内容\r\n     */\r\n    html: null,\r\n\r\n    /**\r\n     * 是否支持加载外部 CSS 文件\r\n     */\r\n    loadCssFile: false,\r\n\r\n    /**\r\n     * 是否忽略内部解析错误-关闭它有利于开发调试\r\n     * @type    {Boolean}\r\n     */\r\n    silent: true,\r\n\r\n    /**\r\n     * 请求超时限制\r\n     * @type    {Number}    毫秒\r\n     */\r\n    resourceTimeout: 8000,\r\n\r\n    /**\r\n     * 最大的文件加载数量限制\r\n     * @type    {Number}    数量\r\n     */\r\n    resourceMaxNumber: 64,\r\n\r\n    /**\r\n     * 是否缓存请求成功的资源\r\n     * @return  {Object}\r\n     */\r\n    resourceCache: true,\r\n\r\n    /**\r\n     * 映射资源路径\r\n     * @param   {String}    旧文件地址\r\n     * @return  {String}    新文件地址\r\n     */\r\n    resourceMap: function(file) {\r\n        return file;\r\n    },\r\n\r\n    /**\r\n     * 忽略资源\r\n     * @param   {String}    文件地址\r\n     * @return  {Boolean}   如果返回`true`则忽略当当前文件的加载\r\n     */\r\n    resourceIgnore: function(file) {\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * 资源加载前的事件\r\n     * @param   {String}    文件地址\r\n     */\r\n    resourceBeforeLoad: function(file) {\r\n    },\r\n\r\n    /**\r\n     * 加载远程资源的自定义请求头\r\n     * @param   {String}    文件地址\r\n     * @return  {Object}\r\n     */\r\n    resourceRequestHeaders: function(file) {\r\n        return {\r\n            'accept-encoding': 'gzip,deflate'\r\n        };\r\n    }\r\n}\r\n```\r\n\r\n## 运行单元测试\r\n\r\n克隆源码，然后进入源码目录执行：\r\n\r\n```shell\r\nnpm test\r\n```\r\n\r\n## 支持的 DOM API\r\n\r\n* Window\r\n    - [getComputedStyle()](https://developer.mozilla.org/zh-CN/docs/Web/API/Window/getComputedStyle)\r\n    - [CSSStyleDeclaration()](https://developer.mozilla.org/zh-CN/docs/Web/API/CSSStyleDeclaration)\r\n    - [CSSRule()](https://developer.mozilla.org/zh-CN/docs/Web/API/CSSRule)\r\n    - [CSSStyleRule()](https://developer.mozilla.org/zh-CN/docs/Web/API/CSSStyleRule)\r\n    - [MediaList()](https://developer.mozilla.org/zh-CN/docs/Web/API/MediaList)\r\n    - [CSSMediaRule()](https://developer.mozilla.org/zh-CN/docs/Web/API/CSSMediaRule)\r\n    - [CSSImportRule()](https://developer.mozilla.org/zh-CN/docs/Web/API/CSSImportRule)\r\n    - [CSSFontFaceRule()](https://developer.mozilla.org/zh-CN/docs/Web/API/CSSFontFaceRule)\r\n    - [StyleSheet()](https://developer.mozilla.org/zh-CN/docs/Web/API/StyleSheet)\r\n    - [CSSStyleSheet()](https://developer.mozilla.org/zh-CN/docs/Web/API/CSSStyleSheet)\r\n    - [CSSKeyframesRule()](https://developer.mozilla.org/zh-CN/docs/Web/API/CSSKeyframesRule)\r\n    - [CSSKeyframeRule()](https://developer.mozilla.org/zh-CN/docs/Web/API/CSSKeyframeRule)\r\n* Document\r\n    - [URL](https://developer.mozilla.org/zh-CN/docs/Web/API/Document/URL)\r\n    - [documentElement](https://developer.mozilla.org/zh-CN/docs/Web/API/Document/documentElement)\r\n    - [head](https://developer.mozilla.org/zh-CN/docs/Web/API/Document/head)\r\n    - [body](https://developer.mozilla.org/zh-CN/docs/Web/API/Document/body)\r\n    - [title](https://developer.mozilla.org/zh-CN/docs/Web/API/Document/title)\r\n    - [styleSheets](https://developer.mozilla.org/zh-CN/docs/Web/API/Document/styleSheets)\r\n    - [getElementsByTagName()](https://developer.mozilla.org/zh-CN/docs/Web/API/Document/getElementsByTagName)\r\n    - [getElementById()](https://developer.mozilla.org/zh-CN/docs/Web/API/Document/getElementById)\r\n    - [querySelector()](https://developer.mozilla.org/zh-CN/docs/Web/API/Document/querySelector)\r\n    - [querySelectorAll()](https://developer.mozilla.org/zh-CN/docs/Web/API/Document/querySelectorAll)\r\n* Element\r\n    - [id](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/id)\r\n    - [tagName](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/tagName)\r\n    - [className](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/className)\r\n    - [innerHTML](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/innerHTML)\r\n    - [outerHTML](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/outerHTML)\r\n    - [attributes](https://developer.mozilla.org/zh-CN/docs/Web/API/Node.attributes)\r\n    - [hasAttribute()](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/hasAttribute)\r\n    - [getAttribute()](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/getAttribute)\r\n    - [querySelector()](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/querySelector)\r\n    - [querySelectorAll()](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/querySelectorAll)\r\n    - [getElementsByTagName()](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/getElementsByTagName)\r\n    - [matches()](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/matches)\r\n* HTMLElement\r\n    - [style](https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLElement/style)\r\n* Node\r\n    - [nodeName](https://developer.mozilla.org/zh-CN/docs/Web/API/Node.nodeName)\r\n    - [nodeType](https://developer.mozilla.org/zh-CN/docs/Web/API/Node.nodeType)\r\n    - [childNodes](https://developer.mozilla.org/zh-CN/docs/Web/API/Node.childNodes)\r\n    - [parentNode](https://developer.mozilla.org/zh-CN/docs/Web/API/Node.parentNode)\r\n    - [firstChild](https://developer.mozilla.org/zh-CN/docs/Web/API/Node.firstChild)\r\n    - [lastChild](https://developer.mozilla.org/zh-CN/docs/Web/API/Node.lastChild)\r\n    - [nextSibling](https://developer.mozilla.org/zh-CN/docs/Web/API/Node.nextSibling)\r\n    - [previousSibling](https://developer.mozilla.org/zh-CN/docs/Web/API/Node.previousSibling)\r\n    - [textContent](https://developer.mozilla.org/zh-CN/docs/Web/API/Node.textContent)\r\n    - [baseURI](https://developer.mozilla.org/zh-CN/docs/Web/API/Node.baseURI)\r\n\r\n## 注意事项\r\n\r\n1. 不支持 XML 文档解析 \r\n2. 所有的 DOM 属性均为只读（*计划在下一版本支持写入*）\r\n3. window.getComputedStyle() 仅能获取元素或伪元素在 CSS 中定义的原始值或继承属性，但没有进行计算输出（例如 em \\> px）\r\n4. document.styleSheets 在浏览器中无法跨域访问 CSSOM，browser-x 没有做此限制\r\n5. 不支持浏览器怪异模式\r\n\r\n## 为什么使用 browser-x\r\n\r\nbrowser-x 适合做这些事情：\r\n\r\n1. 高效的爬虫程序，使用 CSS 选择器来收集内容\r\n2. 分析元素的样式使用情况，例如和 CSS 相关的开发工具\r\n\r\n例如：WebFont 压缩工具——[font-spider](https://github.com/aui/font-spider)\r\n\r\n如果需要更多的 DOM 特性，例如跑基于 DOM 的测试脚本、甚至载入 jQuery 等，那么 [jsdom](https://github.com/tmpvar/jsdom) 这个项目可能会更适合你（注意：它没有完整解析样式表）。",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}